# -*- coding: utf-8 -*-
"""project_employee.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TsXueCjcN1K-nt1ti8VHy7qv2jL5XY0t
"""

import pandas as pd
import numpy as np 
import seaborn as sns

df = pd.read_csv('employee.csv')
df.head(5)

df.isnull().sum()

"""# **Data Cleaning**

****We can see that our dataset has some null values. I will print only those columns that have null values. Then we start our cleaning operations.****
"""

df.columns[df.isnull().any()]

cols = df.columns[df.isnull().any()]
df[cols].isnull().sum()

# percentage of null values 

for col in df.columns:
    missing_percent = np.mean(df[col].isnull())
    print('{} - {}%'.format(col, round(missing_percent*100)))

"""Here we visualize this null values of our dataset using seaborn. we can clearly see that we have null values in salary, balance and vehicle column. """

# 
cols = df.columns
colors = ['black', 'red']
sns.heatmap(df[cols].isnull(), cmap=sns.color_palette(colors))

"""**We can't fill our values using median,mean or any other method. because there are '$' sign.**
**We have to get rid of it.**
"""

df['salary'] = df['salary'].replace(r'\$', r'', regex=True)

df['balance'] = df['balance'].replace(r'\$', r'', regex=True)

# Now check again and '$' sign is vanish. 
df.head(1)

"""Now here is the thing. we remove '$' sign so that we can fill our nan values. but if we check our datatype we can see that our integer columns represent an object. There is no numeric columns. so we have to make it numeric. then we convert it to an integer. """

df.info()

# Make it numeric.

df['salary'] = pd.to_numeric(df['salary'], errors='coerce')
df['balance'] = pd.to_numeric(df['balance'], errors='coerce')

# make it integer. but still we have nan values and cannot convert float to integer.
# I'm using median value fill our nan values

median_salary = df['salary'].median()
print(median_salary)

median_balance = df['balance'].median()
print(median_balance)

df['salary'] = df['salary'].fillna(median_salary)
df['balance'] = df['balance'].fillna(median_balance)

# I checked again and there are no more null values ​​in these two columns. Now make it integer.

df['salary'] = df['salary'].apply(np.int64)
df['balance'] = df['balance'].apply(np.int64)
df.info()

# You can clearly see that we have converted these columns to an integer.

"""However there is another object column which has null value. We want to track our null values ​​for this column. So I replaced all null values ​​with 'None'.

"""

# 
df['vehicle'] = df['vehicle'].fillna('None')

# after all this operation we've  completed our cleaning part.









